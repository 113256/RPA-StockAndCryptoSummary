<Activity mc:Ignorable="sap sap2010" x:Class="MainState" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="797.6,1011.2" sap2010:WorkflowViewState.IdRef="MainState_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="88">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.Office.Interop.Outlook</x:String>
      <x:String>Jack_GeneralUtilities.LogUtil</x:String>
      <x:String>Jack_GeneralUtilities.Housekeep.Tracker_File</x:String>
      <x:String>Jack_GeneralUtilities.FileUtil</x:String>
      <x:String>Jack_GeneralUtilities.Housekeep.Archive_Folder</x:String>
      <x:String>Jack_GeneralUtilities.MailUtil</x:String>
      <x:String>Jack_GeneralUtilities.Housekeep</x:String>
      <x:String>Jack_GeneralUtilities.Healthcheck</x:String>
      <x:String>Jack_GeneralUtilities.Healthcheck.Helper_Functions</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Jack.GeneralUtilities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="808,846.4" sap2010:WorkflowViewState.IdRef="Sequence_88">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="simple flow for linear process" DisplayName="MainState" sap:VirtualizedContainerService.HintSize="766.4,753.6" sap2010:WorkflowViewState.IdRef="StateMachine_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">410,92.4</av:Point>
          <x:Double x:Key="StateContainerWidth">732.8</x:Double>
          <x:Double x:Key="StateContainerHeight">685.59999999999991</x:Double>
          <av:PointCollection x:Key="ConnectorLocation">413,167.6 413,197.6 236.64,197.6 236.64,209.6</av:PointCollection>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="0 - kill all processes&#xA;1. check outlook open&#xA;2. read config file&#xA;3. files healthcheck&#xA;3b. Folder healthcheck&#xA;4. shareddrive healthcheck&#xA;4. read credentials" DisplayName="Init" sap:VirtualizedContainerService.HintSize="731.2,4046.4" sap2010:WorkflowViewState.IdRef="State_1">
        <State.Entry>
          <Sequence sap:VirtualizedContainerService.HintSize="686.4,3533.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="644.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[InitError]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="644.8,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="chrome" />
            <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="644.8,452.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[CurrentRetryCount]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[healthCheckEmailBody]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[startTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Now.ToString("hhmmss")]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[InitError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="644.8,2673.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence DisplayName="Init" sap:VirtualizedContainerService.HintSize="608,2442.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:List(x:String)" Name="listOfFilesForHealthcheck" />
                    <Variable x:TypeArguments="scg:List(x:String)" Name="listOfFoldersForHealthCheck" />
                    <Variable x:TypeArguments="x:Boolean" Name="preRunCheckPass" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="kill all proceses&#xA;read config&#xA;open outlook.." DisplayName="Before healthcheck" sap:VirtualizedContainerService.HintSize="566.4,1735.2" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CheckKeyboardLanguage workflow" sap:VirtualizedContainerService.HintSize="524.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\CheckKeyboardLanguage.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="524.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="Utilities\Housekeep\KillAllProcesses.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Sequence DisplayName="Get config path" sap:VirtualizedContainerService.HintSize="524.8,152.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[configPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(Environment.CurrentDirectory, "Config\Config.xlsx")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Config" sap:VirtualizedContainerService.HintSize="524.8,1000.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[File.Exists(configPath)]" DisplayName="If config doent exist" sap:VirtualizedContainerService.HintSize="483.2,219.2" sap2010:WorkflowViewState.IdRef="If_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Else>
                          <Throw Exception="[new Exception(&quot;Config file doesnt exist: &quot;+configPath)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadConfig workflow" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="Utilities\ConfigUtil\ReadConfig.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[configPath]</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"User","Robot"}]</InArgument>
                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadConfig workflow" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="Utilities\ConfigUtil\ReadConfig.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[Path.Combine(Environment.CurrentDirectory, Config("System Config Path").ToString)]</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"System"}]</InArgument>
                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Config("Config File Path")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[configPath]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Config("SystemExceptionTo")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[Config("Bot Owner Email To").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Config("Working Folder Path")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(Environment.CurrentDirectory, Config("Working Folder Path").ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[Config(&quot;Working Folder Path&quot;).ToString]" />
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="524.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;Initialization state start&quot;]" />
                  </Sequence>
                  <Assign sap:VirtualizedContainerService.HintSize="566.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[healthCheckEmailBody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Config("Healthcheck Body").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="assign from config file" DisplayName="Assign max retry" sap:VirtualizedContainerService.HintSize="566.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[MaxRetryCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Integer.Parse(Config("MaxRetryCount").ToString)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Sequence DisplayName="Assign foldersto list" sap:VirtualizedContainerService.HintSize="566.4,215.2" sap2010:WorkflowViewState.IdRef="Sequence_66">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[listOfFoldersForHealthCheck]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="x:String" Collection="[listOfFoldersForHealthCheck]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_17" Item="[Config(&quot;Working Folder Path&quot;).ToString]" />
                  </Sequence>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Run Pre-run Check workflow" sap:VirtualizedContainerService.HintSize="566.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\Run Pre-run Check.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfFilesToCheck">
                        <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                      </InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfFoldersToCheck">
                        <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="listOfFoldersForHealthCheck.ToArray" />
                      </InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfCredentialsToCheck">
                        <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                      </InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_finalResult">
                        <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="preRunCheckPass" />
                      </OutArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="inOut_finalStatusHTML">
                        <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="healthCheckEmailBody" />
                      </InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="611.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,284" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[InitError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Exception during Initialization: &quot;+exception.Message]" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </State.Entry>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">183.2,209.6</av:Point>
            <av:Size x:Key="ShapeSize">133.6,280.8</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">100</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <State.Transitions>
          <Transition DisplayName="Init Success" sap2010:WorkflowViewState.IdRef="Transition_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">316.8,335.96 346.8,335.96 346.8,256.08 533.2,256.08</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.Condition>
              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="InitError = False" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
            </Transition.Condition>
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="1. copy all files to working folder&#xA;..." DisplayName="Process" sap:VirtualizedContainerService.HintSize="133.6,121.6" sap2010:WorkflowViewState.IdRef="State_3">
                <State.Entry>
                  <Sequence sap:VirtualizedContainerService.HintSize="495.2,1158.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="453.6,1065.6" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="416.8,811.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap2010:Annotation.AnnotationText="1.initialize variables..&#xA;2. copy files to working folder..." DisplayName="Prepare to start process" sap:VirtualizedContainerService.HintSize="375.2,357.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;PROCESS STATE START&quot;]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="Utilities\Housekeep\KillAllProcesses.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Assign sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[Config("Start DateTime")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[Now.ToString("dd/MM/yyyy hh:mm:ss tt")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Main1 workflow" sap:VirtualizedContainerService.HintSize="375.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="MainREFramework.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_configPath">[configPath]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_completionEmailSubject">[completionEmailSubject]</OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_completionEmailBody">[completionEmailBody]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[&quot;PROCESS STATE END&quot;]" />
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="exceptionScreenshotPath" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Message="[exception.Message]" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="420,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_92">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[exception.Message]" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">533.2,189.2</av:Point>
                    <av:Size x:Key="ShapeSize">133.6,121.6</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <State.Transitions>
                  <Transition DisplayName="go to archive" sap2010:WorkflowViewState.IdRef="Transition_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">593.32,310.8 593.32,496.96 506.8,496.96</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">44</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>True</Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="1. copy all files back to original location...&#xA;2. archive working folder...&#xA;3. Archive log" DisplayName="Archive" sap:VirtualizedContainerService.HintSize="133.6,169.6" sap2010:WorkflowViewState.IdRef="State_5">
                        <State.Entry>
                          <Sequence sap:VirtualizedContainerService.HintSize="503.2,784.8" sap2010:WorkflowViewState.IdRef="Sequence_81">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="461.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="Utilities\Housekeep\KillAllProcesses.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Delete Directory workflow" sap:VirtualizedContainerService.HintSize="461.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="Utilities\FileUtil\Delete Directory.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_source">[Config("Working Folder Path").ToString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Sequence DisplayName="Folders Healthcheck" sap:VirtualizedContainerService.HintSize="461.6,436" sap2010:WorkflowViewState.IdRef="Sequence_80">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="healthCheckPass" />
                                <Variable x:TypeArguments="x:String" Name="healthCheckStatusTxt" />
                                <Variable x:TypeArguments="scg:List(x:String)" Name="listOfFoldersForHealthCheck" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Assign foldersto list" sap:VirtualizedContainerService.HintSize="420,343.2" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[listOfFoldersForHealthCheck]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" Collection="[listOfFoldersForHealthCheck]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_19" Item="[Config(&quot;Working Folder Path&quot;).ToString]" />
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GenericHealthCheck workflow" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\Helper Functions\GenericHealthCheck.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_healthCheckPass" />
                                    <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfItems">[listOfFoldersForHealthCheck.ToArray]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_healthCheckCategory">Folder</InArgument>
                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_failedItemsList" />
                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_successItemsList" />
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_checkStatusHTML" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </Sequence>
                          </Sequence>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">373.2,395.2</av:Point>
                            <av:Size x:Key="ShapeSize">133.6,169.6</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <State.Transitions>
                          <Transition DisplayName="End" sap2010:WorkflowViewState.IdRef="Transition_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:PointCollection x:Key="ConnectorLocation">426.64,564.8 426.64,625.36 346.8,625.36</av:PointCollection>
                                <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                                <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Transition.To>
                              <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="" DisplayName="End" sap:VirtualizedContainerService.HintSize="133.6,92.8" sap2010:WorkflowViewState.IdRef="State_4" IsFinal="True">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">213.2,583.6</av:Point>
                                    <av:Size x:Key="ShapeSize">133.6,92.8</av:Size>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </State>
                            </Transition.To>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
          <Transition DisplayName="Init Error" sap:VirtualizedContainerService.HintSize="448.8,509.6" sap2010:WorkflowViewState.IdRef="Transition_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">256.68,490.4 256.68,520.4 266.64,520.4 266.64,583.6</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <x:Reference>__ReferenceID0</x:Reference>
            </Transition.To>
            <Transition.Condition>[InitError = True]</Transition.Condition>
          </Transition>
        </State.Transitions>
        <State.Variables>
          <Variable x:TypeArguments="x:String" Name="healthCheckEmailBody" />
          <Variable x:TypeArguments="x:String" Name="healthCheckStatusForEmail" />
          <Variable x:TypeArguments="x:String" Name="healthCheckEmailSubject" />
        </State.Variables>
      </State>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
        <Variable x:TypeArguments="x:Boolean" Name="InitError" />
        <Variable x:TypeArguments="x:String" Name="configPath" />
        <Variable x:TypeArguments="x:Int32" Name="MaxRetryCount" />
        <Variable x:TypeArguments="x:Int32" Name="CurrentRetryCount" />
        <Variable x:TypeArguments="x:String" Name="excelTempPath" />
        <Variable x:TypeArguments="x:String" Name="startTime" />
        <Variable x:TypeArguments="x:String" Name="completionEmailSubject" />
        <Variable x:TypeArguments="x:String" Name="completionEmailBody" />
      </StateMachine.Variables>
    </StateMachine>
  </Sequence>
</Activity>