<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="Run_HealthCheck" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_arrayOfFilesToCheck" Type="InArgument(s:String[])" />
    <x:Property Name="in_arrayOfFoldersToCheck" Type="InArgument(s:String[])" />
    <x:Property Name="in_arrayOfCredentialsToCheck" Type="InArgument(s:String[])" />
    <x:Property Name="out_finalResult" Type="OutArgument(x:Boolean)" />
    <x:Property Name="inOut_finalStatusHTML" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>722.4,2704.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Run_HealthCheck_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="58">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Check if list of folders, files and credentials exist and return a boolean status and HTML  status" DisplayName="Run_HealthCheck" sap:VirtualizedContainerService.HintSize="732.8,2540" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="healthCheckItemPass" />
      <Variable x:TypeArguments="x:String" Name="healthCheckItemStatusHTML" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="691.2,60" sap2010:WorkflowViewState.IdRef="Assign_34">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_finalResult]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Init" sap:VirtualizedContainerService.HintSize="691.2,2316" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Files Healthcheck" sap:VirtualizedContainerService.HintSize="649.6,632.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="listOfFilesForHealthcheck" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap:VirtualizedContainerService.HintSize="524.8,540" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FileHealthCheck workflow" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\Helper Functions\GenericHealthCheck.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_healthCheckPass">[healthCheckItemPass]</OutArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfItems">[in_arrayOfFilesToCheck]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_healthCheckCategory">File</InArgument>
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_failedItemsList" />
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_successItemsList" />
              <OutArgument x:TypeArguments="x:String" x:Key="out_checkStatusHTML">[healthCheckItemStatusHTML]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <If Condition="[healthCheckItemPass]" sap:VirtualizedContainerService.HintSize="483.2,219.2" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[out_finalResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[inOut_finalStatusHTML]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[inOut_finalStatusHTML.Replace("{FileHealthcheckStatus}",healthCheckItemStatusHTML)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <Sequence DisplayName="Folders Healthcheck" sap:VirtualizedContainerService.HintSize="649.6,466.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="healthCheckPass" />
          <Variable x:TypeArguments="x:String" Name="healthCheckStatusTxt" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap:VirtualizedContainerService.HintSize="420,373.6" sap2010:WorkflowViewState.IdRef="Sequence_27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FolderHealthCheck workflow" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\Helper Functions\GenericHealthCheck.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_healthCheckPass">
                <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="healthCheckItemPass" />
              </OutArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfItems">
                <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="in_arrayOfFoldersToCheck" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_healthCheckCategory">
                <Literal x:TypeArguments="x:String">Folder</Literal>
              </InArgument>
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_failedItemsList" />
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_successItemsList" />
              <OutArgument x:TypeArguments="x:String" x:Key="out_checkStatusHTML">
                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="healthCheckItemStatusHTML" />
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <If Condition="[healthCheckItemPass]" sap:VirtualizedContainerService.HintSize="378.4,52.8" sap2010:WorkflowViewState.IdRef="If_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[out_finalResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_36">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[inOut_finalStatusHTML]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[inOut_finalStatusHTML.Replace("{FolderHealthcheckStatus}",healthCheckItemStatusHTML)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <Sequence DisplayName="Credential Healthcheck" sap:VirtualizedContainerService.HintSize="650,624" sap2010:WorkflowViewState.IdRef="Sequence_29">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="healthCheckPass" />
          <Variable x:TypeArguments="x:String" Name="healthCheckStatusTxt" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap:VirtualizedContainerService.HintSize="526,532" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FolderHealthCheck workflow" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Utilities\Healthcheck\Helper Functions\GenericHealthCheck.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_healthCheckPass">[healthCheckItemPass]</OutArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="in_arrayOfItems">[in_arrayOfCredentialsToCheck]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_healthCheckCategory">Credential</InArgument>
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_failedItemsList" />
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_successItemsList" />
              <OutArgument x:TypeArguments="x:String" x:Key="out_checkStatusHTML">[healthCheckItemStatusHTML]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <If Condition="[healthCheckItemPass]" sap:VirtualizedContainerService.HintSize="484,212" sap2010:WorkflowViewState.IdRef="If_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[out_finalResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="484,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[inOut_finalStatusHTML]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[inOut_finalStatusHTML.Replace("{CredentialsHealthCheck}",healthCheckItemStatusHTML)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="650,380" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="613.333333333333,301.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[out_finalResult]" sap:VirtualizedContainerService.HintSize="571.333333333333,209.333333333333" sap2010:WorkflowViewState.IdRef="If_11">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_39">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[inOut_finalStatusHTML]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[inOut_finalStatusHTML.Replace("{Result}","Pass")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[inOut_finalStatusHTML]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[inOut_finalStatusHTML.Replace("{Result}","Fail")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
    </Sequence>
  </Sequence>
</Activity>