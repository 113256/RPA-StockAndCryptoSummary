<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="SendBusinessExceptionMail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_configFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_attachments" Type="InArgument(x:String)" />
    <x:Property Name="in_period" Type="InArgument(x:String)" />
    <x:Property Name="in_inputData" Type="InArgument(x:String)" />
    <x:Property Name="in_imageEmailHTML" Type="InArgument(x:String)" />
    <x:Property Name="in_exceptionMessage" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="&quot;e..g ZFI2008 获取指定会计科目TB数据&quot;" Name="in_Step" Type="InArgument(x:String)" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="e.g. recipient = Bot Owner, then To = Bot Owner Email To, cc  = &quot;Bot Owner Email CC&quot;, bcc = &quot;Bot Owner Email BCC&quot; (all from config)" Name="in_recipient" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="current plant&#xA;当前工厂e.g. 东莞，上海，等等&#xA;如果没有多家工厂就填&quot;&quot;" Name="in_currentTransaction" Type="InArgument(x:String)" />
  </x:Members>
  <this:SendBusinessExceptionMail.in_attachments>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SendBusinessExceptionMail.in_attachments>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>603.333333333333,1012.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendBusinessExceptionMail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="e.g. recipient = Bot Owner, then To = Bot Owner Email To, cc  = &quot;Bot Owner Email CC&quot;, bcc = &quot;Bot Owner Email BCC&quot;" DisplayName="SendBusinessExceptionMail" sap:VirtualizedContainerService.HintSize="613.333333333333,948" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Init" sap:VirtualizedContainerService.HintSize="571.333333333333,432" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UnitTestConfig workflow" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utilities\ConfigUtil\UnitTestConfig.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_configPath">[in_configFilePath]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <If Condition="[in_currentTransaction is Nothing]" sap:VirtualizedContainerService.HintSize="484,213.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_currentTransaction]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <If Condition="[in_attachments.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="571.333333333333,213.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_attachments]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">C:\SCMC\Robot\TempLog\log.txt</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_attachments]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_attachments+","+"C:\SCMC\Robot\TempLog\log.txt"]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendOutlookMail workflow" sap:VirtualizedContainerService.HintSize="571.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utilities\MailUtil\SendOutlookMail.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_to">[Config(in_recipient+" Email To").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_cc">[Config(in_recipient+" Email CC").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_bcc">[Config(in_recipient+" Email BCC").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_attachments">[in_attachments]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_body">[Config("Business Exception Email Body").ToString.Replace("{Image}",in_imageEmailHTML).Replace("{ErrorMessage}",in_exceptionMessage).Replace("{期间}",in_period).Replace("{InputData}",in_inputData)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_isDraft">[Config("DontSendEmail").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_subject">[Config("Business Exception Email Subject").ToString.Replace("{Date}",Now.ToString("yyyyMMdd")).Replace("{ProcessName}",Config("Process Name").ToString).Replace("{Step}",in_Step).Replace("{Plant}",in_currentTransaction)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_vbaPath">[Path.Combine(Config("Working Folder Path").ToString, "VBAFunctions.xlsm")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_highImportance">true</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>